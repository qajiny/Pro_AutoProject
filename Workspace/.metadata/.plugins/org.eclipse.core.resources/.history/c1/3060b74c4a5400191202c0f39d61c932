package AutoPracticePackage;

import AutoPracticePackage.BaseClass;
import PlatformLayer.webKeywords;

import org.testng.annotations.Test;

import com.codoid.products.exception.FilloException;

import org.testng.annotations.DataProvider;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.AfterSuite;
import org.testng.Assert;
import org.testng.annotations.*;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Hashtable;
import java.util.Map;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import java.lang.reflect.Method;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;

//import PlatformLayer.selActionKeywords;

import Utilities.Constants;
import Utilities.Utils;

import java.lang.Double;

import AutoPracticePackage.BaseClass;


public class NewTestFile 
{  	
	BaseClass bs = new BaseClass();
	String emailId="Reshmi@gmail.com";
	
  @BeforeSuite
  public void beforeSuite() throws IOException {	  
	  bs.loadOR();
  }
  
 
  @BeforeTest
  public void beforeTest() 
  {	
	// Load test data
		  try {
			  bs.testDataMap = BaseClass.testDataLoader(Constants.testDataFileName,"createAccount");
			
		} catch (FilloException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		  
		  // Launches App
		  System.out.println("Launches Application"); 
		  try {
			BaseClass.LaunchApp();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		  
		/*  // Launch Application
	  System.out.println("IN @LaunchApp");
		String baseUrl = "http://automationpractice.com";
	    String driverPath = "C:\\SeleniumJars\\geckodriver.exe";
		  
		System.setProperty("webdriver.firefox.marionette", driverPath);
      BaseClass.driver = new FirefoxDriver();
      BaseClass.driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
    
      BaseClass.driver.get(baseUrl);
      BaseClass.driver.manage().window().maximize();
		System.out.println("Launched the App");
		System.out.println("OUT @LaunchApp");
		*/
      
  }
    
  @SuppressWarnings("unchecked")
  @Test(enabled = false) 
  public void createAccount()
  {	
	  Integer RandNo = Utils.CreateRandomNo();
	  emailId = "UserAccount" + RandNo + "@" + "gmail.com";
	  
	  // Screen 1
	  webKeywords.webElement_Click("Obj_Lnk_SignIn");
	  BaseClass.driver.findElement(By.xpath(BaseClass.objRepo.getProperty("Obj_Txt_Email"))).sendKeys(emailId);
	  //webKeywords.webElement_Type("Obj_Txt_Email","emailId");
	  webKeywords.webElement_Click("Obj_Btn_CreateAccount");
	  
	  // Screen 2
	  webKeywords.webElement_Click("Obj_Rdo_Mrs");
	  webKeywords.webElement_Type("Obj_Txt_FirstName","firstName");
	  webKeywords.webElement_Type("Obj_Txt_LastName","lastName");
	  webKeywords.webElement_Type("Obj_Txt_Password","passWord");
	  	  
	  // Select DOB
	  webKeywords.webElement_Select("Obj_Sel_Day",19);
	  webKeywords.webElement_Select("Obj_Sel_Month",12);
	  webKeywords.webElement_Select("Obj_Sel_Year",12);
	  	  
	  // Enter data in "Your Address" fields
	  //webKeywords.webElement_Type("Obj_Txt_LastNameAdrdess","lastName");
	  webKeywords.webElement_Type("Obj_Txt_CompanyAddress","company");
	  webKeywords.webElement_Type("Obj_Txt_Address","address");
	  webKeywords.webElement_Type("Obj_Txt_CityAddress","city");
	  
	  webKeywords.webElement_SelectVisibleText("Obj_Sel_StateAddress","state");	  
	  webKeywords.webElement_Type("Obj_Txt_ZipAddress","postalCode");
	  webKeywords.webElement_SelectVisibleText("Obj_Sel_CountryAddress","country");
	  
	  webKeywords.webElement_Type("Obj_Txt_MobilePhone","mobilePhone");
	  webKeywords.webElement_Type("Obj_Txt_AlternateAddress","aliasAddress");
	  webKeywords.webElement_Click("Obj_Btn_Register");
	  
	  
	  // Verify zip error
	 // webKeywords.webElement_ObjectDisplayed("Obj_Lbl_ZipError1");
	 // webKeywords.webElement_ObjectDisplayed("Obj_Lbl_ZipError2");
	  	 
	  // Screen 3
	 /* System.out.println("11111"); 
	  webKeywords.webElement_VerifyText("Obj_lnk_CustName",BaseClass.testDataMap.get("fullName"));
	  System.out.println("22222"); 	  */
	  System.out.println("OUT createAccount"); 	  
  }
  
  @Test(enabled = false) 
  public void SignIn() throws InterruptedException
  {	  
	  webKeywords.webElement_Click("Obj_Lnk_SignIn");
	  BaseClass.driver.findElement(By.xpath(BaseClass.objRepo.getProperty("Obj_Txt_EmailSignIn"))).sendKeys(emailId);
	  webKeywords.webElement_Type("Obj_Txt_Password","passWord");
	  Thread.sleep(5000);
	  
	  // SendKeys Tab+Tab+Enter
	  webKeywords.webElement_SendTabTabEnter("Obj_Txt_Password");
  }
  
  @Test(enabled = false) 
  public void addProductToCart(String ProductName)
  {
	  // Search for product
	  webKeywords.webElement_Type("Obj_Txt_Search",ProductName);
	  webKeywords.webElement_Click("Obj_Btn_Search");
	  webKeywords.webElement_Click("Obj_Lnk_List");
	  webKeywords.webElement_Click("Obj_Btn_AddToCart");	  
	  
      webKeywords.webElement_Click("Obj_Btn_CloseCart");      
      
  }
  
  public double addPrice(String price1 , String price2)
  {
	  price1 = price1.replace("$", "");
	  price2 = price2.replace("$", "");
	  
	  double Sum = Double.parseDouble(price1) + Double.parseDouble(price2);
	  return Sum;
  }
  
  @Test(enabled = false) 
  public void completeThePurchase() throws InterruptedException
  {
	  // View shopping cart	  
	  webKeywords.webElement_Click("Obj_Lnk_ShowCart");
	  Thread.sleep(5000);
	  webKeywords.webElement_Click("Obj_Lbl_AddOneMore");
	  
	  // Fetch product prices
	  String price1 = webKeywords.webElement_getText("Obj_Lbl_ProductPrice1");
	  String price2 = webKeywords.webElement_getText("Obj_Lbl_ProductPrice2");
	  
	  double Sum = addPrice(price1,price1);
	  
	  String TotalProds = webKeywords.webElement_getText("Obj_Lbl_TotalProducts");
	  TotalProds = TotalProds.replace("$", "");
	  
	  double TotalProducts = Double.parseDouble(TotalProds);
	  
	  // Verify that TotalProducts should be equal to Sum
	  if (Double.compare(TotalProducts, Sum) == 0) 
	  { 		  
          System.out.println("TotalProducts = Sum"); 
      } 
	  else
	  {
		  System.out.println("TotalProducts <> Sum"); 
	  }
	  
	  String Shipping = webKeywords.webElement_getText("Obj_Lbl_TotalShipping");
	  String Tax = webKeywords.webElement_getText("Obj_Lbl_Tax");
		  
	  
	  
	  
	  
	  
	  //webKeywords.webElement_Click("Obj_Btn_CheckOut");
	  //Thread.sleep(5000);
	  /*
	  webKeywords.webElement_Click("Obj_Btn_ProceedToCheckOut");	  
	  Thread.sleep(5000);
	  
      webKeywords.webElement_Click("Obj_Btn_CloseCart");      
      */
      
  }
  
  @Test
  public void TestScenario() throws InterruptedException
  {
	  createAccount();
	 // SignIn();
	  addProductToCart("Product1");
	  addProductToCart("Product2");
	  completeThePurchase();
	  
  }
  
  
 
  
  
  

  

  @AfterTest
  public void afterTest() {
	//  driver.close();
  }

  

  @AfterSuite
  public void afterSuite() {
  }

}
